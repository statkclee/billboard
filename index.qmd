---
title: "KPOP - 빌보드 HOT 100"
format: 
  dashboard:
    logo: "images/kpop_logo.webp"
    orientation: columns
editor_options: 
  chunk_output_type: console
---

## Column {width="35%"}

```{r}
#| expandable: false
#| label: createtable
#| eval: true

library(tidyverse)
library(gt)

bb_gt_tbl <- read_csv("data/bb_gt_tbl.csv")
bb_tbl <- read_csv("data/bb.csv")

# 그래프

draw_rank_ggplot <- function(artist = "방탄소년단") {
  bb_tbl |> 
    filter(가수그룹 == artist) |> 
    group_by(연도) |>
    summarise(최고순위 = min(최고순위, na.rm = TRUE)) |>
    ggplot(aes( x = 연도, y = 최고순위)) +
      geom_line(size = 3, color = "green") +
      geom_point(size = 10, color = "white") +
      scale_y_continuous(trans = "reverse", breaks = c(1, seq(10, 100, 10)),
                         limits = c(100,1)) +
      theme_void() +
      scale_x_continuous(limits = c(2009, 2024))    
}


# Create the gt table
bb_gt_tbl %>%
  mutate(그래프 = 가수그룹) |> 
  gt() %>%
  cols_align(
    align = "center",
    columns = c(pic)
  ) %>%
  cols_width(
    pic ~ px(120)  # Adjust the width of the image column if needed
  ) |> 
  text_transform(
    locations = cells_body(columns = pic),
    fn = function(x) {
      local_image(
        filename = x,
        height = 50
      )
    }
  ) |> 
  cols_label(pic = "사진",
             최고잔존주 = "차트 인 기간(주)") |> 
  gtExtras::gt_theme_538() |> 
  tab_header(
    title = html("한국인과&nbsp;&nbsp;", local_image("images/Billboard-Dance-Chart-Logo.webp", height = 40), "&nbsp;&nbsp;Hot 100"),
    subtitle = md("한국인 빌보드 차트에 최고, 오래 머물렀던 곡들")
    ) |> 
  text_transform(
    locations = cells_body(columns = 그래프),
    fn = function(column) {
      map(column, draw_rank_ggplot) |> 
        ggplot_image(height = px(50), aspect_ratio = 3)
    }
  ) |> 
  cols_align(
    align = "center",
    columns = everything()
  ) |> 
  tab_style(
    style = cell_text(align = "center"),
    locations = cells_column_labels(columns = everything()))  |> 
  tab_footnote(footnote = md("**제작:** 한국 R 사용자회")) |> 
  tab_source_note(
    source_note = md("**Source:** [Melissa Van Bussel](https://github.com/melissavanbussel/spotify-dashboard) 코드를 참고하여 제작되었습니다.")
  ) |> 
  tab_options(
    table.font.color = "#FFFFFF",
    table.background.color = "#191414",
    table.font.size = px(12),
    table.border.top.color = "transparent",
    table.border.bottom.color = "transparent",
    table_body.hlines.color = "transparent",
    table_body.border.bottom.color = "transparent",
    column_labels.border.bottom.color = "transparent",
    column_labels.border.top.color = "transparent",
    footnotes.background.color = "#282828",
    source_notes.background.color = "#282828",
    column_labels.background.color = "#282828"
  ) |> 
  tab_style_body(
    style = cell_borders(
      sides = c("top", "bottom"),
      weight = px(0) # Remove row borders
    ),
    fn = function(x) { is.numeric(x) | is.character(x) }
  ) |>   
  opt_css(
    css = "
    table tr:nth-child(odd) {
      background-color: #282828;
    }
      
    table tr:hover {
      background-color: #383838;
    }
    
    .cell-output-display {
      overflow-x: unset !important;
    }
    
    div#custom {
      overflow-x: unset !important;
      overflow-y: unset !important;
    }
    
    #custom .gt_col_heading {
      position: sticky !important;
      top: -5px !important;
      z-index: 10 !important;
    }
    "
  )
```

![](images/billboard_gt.png){fig-align="center" height="100"}

## Column {width="65%"}

### Row {height="10%"}

```{r, load_kpop}
#| echo: false
#| include: false
#| eval: true

library(readxl)
library(tidyverse)

kpop_raw <- read_excel("data/spotify_kpop.xlsx")

kpop_df <- kpop_raw |> 
  mutate(song_id = str_replace_all(스포터파이링크, "https://open.spotify.com/track/", "") |> 
              str_extract("^[^?]*"))


ojs_define(kpop_ojs = kpop_df)
```

```{ojs}
//| expandable: false

// Tranpose the data to  make it usable in ojs
top_hits = transpose(kpop_ojs)

// Create a dropdown menu of the songs
viewof songDropdown = Inputs.select(
  top_hits.map(d => d.곡명),
  {
    label: "노래를 선택하세요",
    unique: true
  }
)
```

<br>

### Row {height="70%"}

```{ojs}
//| expandable: false
html`<iframe class="custom-iframe" style="border-radius:12px; display: flex; justify-content: center; align-items: center;" 
  src=${`https://open.spotify.com/embed/track/${top_hits.find(song => song.곡명 === songDropdown).song_id}?utm_source=generator&theme=0`} 
  width="100%" 
  height="352" 
  frameBorder="0" 
  allowfullscreen="" 
  allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" 
  loading="lazy">
</iframe>`
```
